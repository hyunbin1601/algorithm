import sys
input = sys.stdin.readline

# https://www.acmicpc.net/problem/1541

# 세준이는 양수와 +, -, 그리고 괄호를 가지고 식을 만들었다. 그리고 나서 세준이는 괄호를 모두 지웠다.
# 그리고 나서 세준이는 괄호를 적절히 쳐서 이 식의 값을 최소로 만들려고 한다.
# 괄호를 적절히 쳐서 이 식의 값을 최소로 만드는 프로그램을 작성하시오.
# 첫째 줄에 식이 주어진다. 식은 ‘0’~‘9’, ‘+’, 그리고 ‘-’만으로 이루어져 있고, 가장 처음과 마지막 문자는 숫자이다. 그리고 연속해서 두 개 이상의 연산자가 나타나지 않고, 5자리보다 많이 연속되는 숫자는 없다. 수는 0으로 시작할 수 있다. 입력으로 주어지는 식의 길이는 50보다 작거나 같다.
# 출력은 그에 대한 답


cal = input().split('-')

result = sum(map(int, cal[0].split('+'))) # map을 통해 
for i in cal[1:]:  # cal 배열의 1부터 끝까지 반복한다는 의미
    result -= sum(map(int, i.split('+')))  # i.split으로 인해 반환된 리스트를 map으로 int로 변환 후 해당 map 객체를 sum으로 하나하나 모두 더함
    # map에 리스트가 주어진다면? -> map은 리스트의 요소를 하나씩 가져와서 함수를 적용한다. -> 이때 반환값은 map 객체이다.
print(result)

# sum 함수는 반복 가능한 객체의 모든 요소를 더하는 함수 (반복 가능한 거면 뭐든 상관이 없는듯?)
# 그리디 알고리즘의 핵심 아이디어 -> '-'를 기준으로 나누고 빼기
# '-'를 기준으로 나누면 최소값을 구할 수 있다.
# '-'가 나올 때마다 나눔
# 작은 문제들로 분할했으면 첫번째 부분(배열의 0번째 index)은 모두 더하기
# 나머지 부분은 모두 빼주기(map 객체로 반복 가능한 iterable 객체 반환 후 sum으로 하나하나 다 더하기)